{"ast":null,"code":"var _jsxFileName = \"/home/jakobkubicki/Desktop/Hackathon/client/src/components/recordList.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nstate = {\n  modal: false,\n  data: [],\n  modalID: 0\n};\n\ntoggle = index => {\n  //Clear error\n  this.setState({\n    modalID: index,\n    modal: !this.state.modal\n  });\n};\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.termDesc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.subjectDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + props.record._id,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"modal-lg\",\n        isOpen: this.state.modal,\n        toggle: () => this.toggle(index),\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          className: \"w-100 text-center\",\n          toggle: () => this.toggle(index),\n          children: [this.state.person[this.state.modalID].fname && this.state.person[this.state.modalID].lname ? this.state.person[this.state.modalID].fname + \" \" + this.state.person[this.state.modalID].lname : '', \"'s profile page\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"main-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row gutters-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-4 mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"card mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card-body\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-sm-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                          class: \"mb-0\",\n                          children: \"Full Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 21\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-sm-9 text-secondary\",\n                        children: this.state.person[this.state.modalID].fname && this.state.person[this.state.modalID].lname ? this.state.person[this.state.modalID].fname + \" \" + this.state.person[this.state.modalID].lname : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this) // <Record\n      //   record={currentrecord}\n      //   deleteRecord={this.deleteRecord}\n      //   key={currentrecord._id}\n      // />\n      ;\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Record List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.recordList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/home/jakobkubicki/Desktop/Hackathon/client/src/components/recordList.js"],"names":["React","Component","axios","Link","state","modal","data","modalID","toggle","index","setState","Record","props","record","courseTitle","termDesc","courseNumber","subjectDescription","_id","deleteRecord","RecordList","constructor","bind","records","componentDidMount","get","then","response","catch","error","console","log","id","delete","filter","el","recordList","map","currentrecord","person","fname","lname","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nstate = {\n  modal: false,\n  data: [],\n  modalID: 0\n}\n\ntoggle = (index) => {\n  //Clear error\n  this.setState({\n      modalID: index,\n      modal: !this.state.modal\n  });\n};\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.courseTitle}</td>\n    <td>{props.record.termDesc}</td>\n    <td>{props.record.courseNumber}</td>\n    <td>{props.record.subjectDescription}</td>\n    <td>\n      <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\n      <a\n        href=\"/\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={() => this.toggle(index)}>\n        <ModalHeader className=\"w-100 text-center\"toggle={() => this.toggle(index)}>{this.state.person[this.state.modalID].fname && this.state.person[this.state.modalID].lname ? this.state.person[this.state.modalID].fname + \" \" + this.state.person[this.state.modalID].lname : ''}'s profile page</ModalHeader>\n    <div class=\"container-modal\">\n       <div class=\"main-body\">\n        <div class=\"row gutters-sm\">\n            <div class=\"col-md-4 mb-3\">\n            </div>\n            <div class=\"col-md-8\">\n            <div class=\"card mb-3\">\n                <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-3\">\n                    <h6 class=\"mb-0\">Full Name</h6>\n                    </div>\n                    <div class=\"col-sm-9 text-secondary\">\n                    {this.state.person[this.state.modalID].fname && this.state.person[this.state.modalID].lname ? this.state.person[this.state.modalID].fname + \" \" + this.state.person[this.state.modalID].lname : ''}\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        </div>\n        </div>  \n        </div> \n    </Modal>\n        // <Record\n        //   record={currentrecord}\n        //   deleteRecord={this.deleteRecord}\n        //   key={currentrecord._id}\n        // />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div>\n        <h3>Record List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}