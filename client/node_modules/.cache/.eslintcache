[{"/Users/ahmad/Downloads/Hackathon/client/src/index.js":"1","/Users/ahmad/Downloads/Hackathon/client/src/App.js":"2","/Users/ahmad/Downloads/Hackathon/client/src/components/Navbar.js":"3","/Users/ahmad/Downloads/Hackathon/client/src/components/recordList.js":"4","/Users/ahmad/Downloads/Hackathon/client/src/components/edit.js":"5","/Users/ahmad/Downloads/Hackathon/client/src/components/create.js":"6","/Users/ahmad/Downloads/Hackathon/client/src/components/Home.js":"7","/Users/ahmad/Downloads/Hackathon/client/src/components/status.js":"8"},{"size":289,"mtime":1634421431000,"results":"9","hashOfConfig":"10"},{"size":794,"mtime":1634445133379,"results":"11","hashOfConfig":"10"},{"size":1316,"mtime":1634427936812,"results":"12","hashOfConfig":"10"},{"size":3689,"mtime":1634446370957,"results":"13","hashOfConfig":"10"},{"size":4852,"mtime":1634421698000,"results":"14","hashOfConfig":"10"},{"size":4959,"mtime":1634446341933,"results":"15","hashOfConfig":"10"},{"size":3863,"mtime":1634447215157,"results":"16","hashOfConfig":"10"},{"size":2552,"mtime":1634446290305,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uhg94i",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/ahmad/Downloads/Hackathon/client/src/index.js",[],["39","40"],"/Users/ahmad/Downloads/Hackathon/client/src/App.js",["41","42"],"import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/Navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport RecordList from \"./components/recordList\";\nimport Home from \"./components/Home\";\nimport Status from \"./components/status\";\n\nconst App = () => {\n  return (\n    <div>\n      \n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/status\">\n        <Status />\n      </Route>\n      <Route path=\"/create\">\n        <Create />\n      </Route>\n      <Route path=\"/recordList\">\n        <RecordList/>\n      </Route>\n    </div>\n  );\n};\n\nexport default App;","/Users/ahmad/Downloads/Hackathon/client/src/components/Navbar.js",["43"],"import React from \"react\";\n \n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n \n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\nimport Home from './Home';\n \n// Here, we display our Navbar\nconst Navbar = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          Zagweb (but better)\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n \n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Plan\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"/Home\">Home</NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n \nexport default Navbar;","/Users/ahmad/Downloads/Hackathon/client/src/components/recordList.js",["44"],"import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Button } from \"reactstrap\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.courseTitle}</td>\n    <td>{props.record.termDesc}</td>\n    <td>{props.record.courseNumber}</td>\n    <td>{props.record.subjectDescription}</td>\n    <td>{props.record.creditHourSession}</td>    \n  </tr>\n);\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  searchOpen(){\n    axios.get(\"http://localhost:5000/\").then((response) => {\n      console.log(response.data);\n    \n    });\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div class=\"outside_div\">\n                <nav class=\"navbar\">\n            <a class=\"navbar-brand\" href=\"/\">\n                <img src=\"./img/bulldog.png\" width=\"150\" height=\"100\" alt=\"\"/>\n                <img src=\"./img/gonzaga_logo.png\" width=\"400\" height=\"100\" alt=\"\"/>\n            </a>\n        </nav>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n    \n          <input type=\"search\" class=\"form-control rounded\" placeholder=\"Search ...\" aria-label=\"Search\"></input>\n          <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Elective</ul>\n          <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Open\" /> Open Courses</ul>\n\n            <div class=\"class_times bg-primary border border-dark rounded\">\n              <p>Class Times</p>\n              <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Monday</ul>\n              <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Tuesday</ul>\n              <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Wednesday</ul>\n              <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Thursday</ul>\n              <ul><input type=\"checkbox\" id=\"topping\" name=\"topping\" value=\"Elective\" /> Friday</ul>\n              <button class=\"btn-light\">Search</button>\n            </div>\n          </div>\n          <div class=\"col-md-9\">\n          \n          <h3>Course Catalog</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          \n          <tbody>{this.recordList()}</tbody>\n        </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n","/Users/ahmad/Downloads/Hackathon/client/src/components/edit.js",[],"/Users/ahmad/Downloads/Hackathon/client/src/components/create.js",[],"/Users/ahmad/Downloads/Hackathon/client/src/components/Home.js",["45","46"],"import React from \"react\";\nimport '../style.css';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Home = () => {\n\n  const history = useHistory();\n\n  return (\n    <div>\n    <nav class=\"navbar\">\n        <a class=\"navbar-brand\" onClick={() => { history.push('/') }}>\n            <img src=\"./img/bulldog.png\" width=\"150\" height=\"100\" alt=\"\"/>\n            <img src=\"./img/gonzaga_logo.png\" width=\"300\" height=\"100\" alt=\"\"/>\n          </a>\n    </nav>\n\n    <div class=\"list-group center\">\n        \n        <button type=\"button\" class=\"btn btn-primary\" onClick={() => { history.push('/status') }}>\n            <div class=\"float-left\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" fill=\"currentColor\" class=\"bi bi-bookmark-check\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M10.854 5.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 7.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\n                    <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\n                  </svg>\n            </div>\n            <div class = \"expanded-text\">\n                <h2 class=\"short-name\">View Status</h2>\n                <span class=\"longer-name\">View Registration Status, update student term data, and\n                    complete pre-registration requirments</span>\n            </div>\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" class=\"button\" onClick={() => { history.push('/create') }}>\n            <div class=\"float-left\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" fill=\"currentColor\" class=\"bi bi-pencil icon-blue\" viewBox=\"0 0 16 16\">\n                    <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\n                </svg>\n            </div>\n            <div class=\"expanded-text\">\n                <h2 class=\"short-name\">Register</h2>\n                <span class=\"longer-name\">View Registration Status, update student term data, and\n                    complete pre-registration requirments</span>\n            </div>\n            \n        </button>\n    \n        <button class=\"btn btn-primary button\" onClick={() => { history.push('/recordList') }}>\n            <div class=\"float-left\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" fill=\"currentColor\" class=\"bi bi-book\" viewBox=\"0 0 16 16\">\n                    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\"/>\n                </svg>\n            </div>\n            <div class = \"expanded-text\">\n                <h2 class=\"short-name\">Browse All Classes</h2>\n                <span class=\"longer-name\">Class Descriptions</span>\n            </div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default Home;","/Users/ahmad/Downloads/Hackathon/client/src/components/status.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},{"ruleId":"51","severity":1,"message":"56","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},{"ruleId":"51","severity":1,"message":"57","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":13,"column":9,"nodeType":"60","endLine":13,"endColumn":71},{"ruleId":"61","severity":1,"message":"62","line":34,"column":55,"nodeType":"63","messageId":"64","endLine":34,"endColumn":69},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Edit' is defined but never used.","'Home' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]